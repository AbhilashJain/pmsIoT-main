server.port=8085
spring.application.name=operations
eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
eureka.instance.preferIpAddress=true
eureka.instance.leaseRenewalIntervalInSeconds=5
# leave eureka.instance.leaseRenewalIntervalInSeconds unchanged in production
# just here to provide quicker updates to Eureka for demos
eureka.instance.metadataMap.instanceId=${spring.application.name}:${random.value}

#Kfaka Configuration
kafka.broker.host.url=192.168.99.100:9092
#user topic

kafka.broker.topic.user.location=user.location
kafka.broker.topic.user.location.tracking=user.location.tracking
kafka.broker.topic.user.location.nearby=user.location.nearby
#admin topic
kafka.broker.topic.admin.notification=admin.notification

#Mqtt topics
mqtt.broker.topic.user.location.tracking=user/{0}/tracking
mqtt.broker.topic.user.location.nearby = user/{0}/nearby
#Firebase configuration
firebase.host.url=https://fcm.googleapis.com/fcm/send
firebase.server.key=
firebase.admin.topic.user.offline=admin.notification.offline

spring.data.mongodb.database=campus
spring.data.mongodb.port=27017
spring.data.mongodb.host=192.168.99.100

#logging
logging.level.org.springframework.data=error
logging.level.=error

#nearby radius in meter
radius = 500